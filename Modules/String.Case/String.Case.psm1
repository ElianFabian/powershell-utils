# String.Case.psm1



# We have a base case from which we're going to convert from and convert to.
# Base case: something&and&something&else


# Used in Enum/* scripts
$BaseCaseSeparator = "&"

# This enum is autogenerated based on the *Case.ps1 scripts in the Enum folder
# enum CaseType


#region Initialization

$caseFunctions = New-Object System.Collections.Generic.Dictionary'[string, string]'

Get-ChildItem -Path "$PSScriptRoot/Private/Enum" | ForEach-Object {
    . $_.FullName

    $caseName = $_.BaseName

    $caseFunctions.Add("from$caseName", "ConvertFrom-$caseName")
    $caseFunctions.Add("to$caseName", "ConvertTo-$caseName")
}

#endregion


function Convert-Case
{
    param(
        [Parameter(ValueFromPipeline)]
        [string]   $InputObject,
        [CaseType] $From,
        [CaseType] $To
    )

    process { & $caseFunctions["to$To"] (& $caseFunctions["from$From"] $InputObject) }
}


Export-ModuleMember -Function Convert-Case
