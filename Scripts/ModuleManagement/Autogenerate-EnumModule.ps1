# Autogenerate-EnumModule.ps1



# From repository: https://github.com/ElianFabian/powershell-utils


# Generats the enums from the modules to create a file to add them and then import then with the using statement.
# We do this because in Powershell you can't export an enum.


$REGEX_ENUM             = "enum \w+[\s]*\n?{[\S\s]*?}"
$AUTOGENERATED_FILENAME = "EnumModule"

$filesToReadTheirPossibleEnums = Get-ChildItem -Path ..\..\Modules\*  -Recurse -Exclude "$AUTOGENERATED_FILENAME.psm1"

$thisFileName = [System.IO.Path]::GetFileName($PSCommandPath)

$autogeneratedFileContent = [System.Text.StringBuilder]::new("# $AUTOGENERATED_FILENAME.psm1`n`n`n# This file was generated by $thisFileName`n`n`n")
$autogeneratedFileContent.Append("# This file will be import in $PROFILE with a 'using' statement to use its enums`n`n`n")

foreach ($file in $filesToReadTheirPossibleEnums)
{
    $content = Get-Content $file -Raw

    $enums = (Select-String -InputObject $content -Pattern $REGEX_ENUM -AllMatches).Matches

    if ($enums.Count -eq 0) { continue }

    $autogeneratedFileContent.Append("#region From: $($file.Name)`n`n")

    foreach($enum in $enums)
    {
        $autogeneratedFileContent.Append($enum).Append("`n`n")
    }

    $autogeneratedFileContent.Append("#endregion`n`n`n")
}

New-Item -Name "AutogeneratedModules" -Path "../../Modules/" -ItemType Directory -Force
$directory = New-Item -Name $AUTOGENERATED_FILENAME  -Path "../../Modules/AutogeneratedModules" -ItemType Directory -Force
New-Item -Name "$AUTOGENERATED_FILENAME.psm1" -Path $directory -ItemType File -Value $autogeneratedFileContent.ToString() -Force
